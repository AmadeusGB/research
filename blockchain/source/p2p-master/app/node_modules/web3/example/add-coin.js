#!/usr/bin/env node
var fs = require('fs');

var Web3 = require('../index.js');
var web3 = new Web3();

web3.setProvider(new web3.providers.HttpProvider('http://localhost:8545'));

//balance
var balance = web3.eth.getBalance(web3.eth.accounts[0]);
console.log(web3.eth.accounts[0], balance.toString(10));

var filename = "node-coin.sol";
var source = fs.readFileSync(filename).toString("utf8");
console.log("source = ", source)
var compiled = web3.eth.compile.solidity(source);
var code = compiled.Coin.code;
// contract json abi, this is autogenerated using solc CLI
var abi = compiled.Coin.info.abiDefinition;
web3.eth.defaultAccount = web3.eth.accounts[0];
web3.personal.unlockAccount(web3.eth.defaultAccount, "")
web3.eth.contract(abi).new({data: code, gas : 3000000}, function (err, contract) {
	if(err) {
		console.error(err);
		return;
	}
	// callback fires twice, we only want the second call when the contract is deployed
	console.log(contract)
    if(contract.address){
		console.log('address: ' + contract.address);
		console.log('Mined!');
	}
});